<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.MaterialMapper">
    
    <resultMap type="Material" id="MaterialResult">
        <result property="materialId"    column="material_id"    />
        <result property="materialName"    column="material_name"    />
        <result property="unit"    column="unit"    />
        <result property="quantity"    column="quantity"    />
        <result property="price"    column="price"    />
        <result property="status"    column="status"    />
        <result property="description"    column="description"    />
        <result property="createdDate"    column="created_date"    />
        <result property="modifiedDate"    column="modified_date"    />
    </resultMap>

    <sql id="selectMaterialVo">
        select material_id, material_name, unit, quantity, price, status, description, created_date, modified_date from tb_material
    </sql>

    <select id="selectMaterialList" parameterType="Material" resultMap="MaterialResult">
        <include refid="selectMaterialVo"/>
        <where>  
            <if test="materialName != null  and materialName != ''"> and material_name like concat('%', #{materialName}, '%')</if>
            <if test="unit != null  and unit != ''"> and unit = #{unit}</if>
            <if test="quantity != null "> and quantity = #{quantity}</if>
            <if test="price != null "> and price = #{price}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
        </where>
    </select>
    
    <select id="selectMaterialByMaterialId" parameterType="Long" resultMap="MaterialResult">
        <include refid="selectMaterialVo"/>
        where material_id = #{materialId}
    </select>

    <insert id="insertMaterial" parameterType="Material" useGeneratedKeys="true" keyProperty="materialId">
        insert into tb_material
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="materialName != null and materialName != ''">material_name,</if>
            <if test="unit != null">unit,</if>
            <if test="quantity != null">quantity,</if>
            <if test="price != null">price,</if>
            <if test="status != null">status,</if>
            <if test="description != null">description,</if>
            <if test="createdDate != null">created_date,</if>
            <if test="modifiedDate != null">modified_date,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="materialName != null and materialName != ''">#{materialName},</if>
            <if test="unit != null">#{unit},</if>
            <if test="quantity != null">#{quantity},</if>
            <if test="price != null">#{price},</if>
            <if test="status != null">#{status},</if>
            <if test="description != null">#{description},</if>
            <if test="createdDate != null">#{createdDate},</if>
            <if test="modifiedDate != null">#{modifiedDate},</if>
         </trim>
    </insert>

    <update id="updateMaterial" parameterType="Material">
        update tb_material
        <trim prefix="SET" suffixOverrides=",">
            <if test="materialName != null and materialName != ''">material_name = #{materialName},</if>
            <if test="unit != null">unit = #{unit},</if>
            <if test="quantity != null">quantity = #{quantity},</if>
            <if test="price != null">price = #{price},</if>
            <if test="status != null">status = #{status},</if>
            <if test="description != null">description = #{description},</if>
            <if test="createdDate != null">created_date = #{createdDate},</if>
            <if test="modifiedDate != null">modified_date = #{modifiedDate},</if>
        </trim>
        where material_id = #{materialId}
    </update>

    <delete id="deleteMaterialByMaterialId" parameterType="Long">
        delete from tb_material where material_id = #{materialId}
    </delete>

    <delete id="deleteMaterialByMaterialIds" parameterType="String">
        delete from tb_material where material_id in 
        <foreach item="materialId" collection="array" open="(" separator="," close=")">
            #{materialId}
        </foreach>
    </delete>
</mapper>